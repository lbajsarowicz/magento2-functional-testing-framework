<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="ActionGroupWithNoArguments">
        <annotations>
            <severity value="BLOCKER"/>
            <title value="Action Group With No Argument"/>
        </annotations>
        <actionGroup ref="ActionGroupWithoutArgumentsActionGroup" stepKey="actionGroup"/>
    </test>

    <test name="ActionGroupWithDefaultArgumentAndStringSelectorParam">
        <annotations>
            <severity value="BLOCKER"/>
            <title value="Action Group With Default Argument Value and Hardcoded Value in Param"/>
        </annotations>

        <actionGroup ref="ActionGroupWithDefaultArgumentAndStringSelectorParamActionGroup" stepKey="actionGroup"/>
    </test>

    <test name="ActionGroupWithPassedArgumentAndStringSelectorParam">
        <annotations>
            <severity value="BLOCKER"/>
            <title value="Action Group With Passed Argument Value and Hardcoded Value in Param"/>
        </annotations>

        <actionGroup ref="ActionGroupWithDefaultArgumentAndStringSelectorParamActionGroup" stepKey="actionGroup">
            <argument name="someArgument" value="UniquePerson"/>
        </actionGroup>
    </test>

    <test name="ActionGroupWithSingleParameterSelectorFromDefaultArgument">
        <annotations>
            <severity value="BLOCKER"/>
            <title value="Action Group With Default Argument Value and Argument Value in Param"/>
        </annotations>

        <actionGroup ref="ActionGroupWithSingleParameterSelectorFromArgumentActionGroup" stepKey="actionGroup"/>
    </test>

    <test name="ActionGroupWithSingleParameterSelectorFromPassedArgument">
        <annotations>
            <severity value="BLOCKER"/>
            <title value="Action Group With Passed Argument Value and Argument Value in Param"/>
        </annotations>

        <actionGroup ref="ActionGroupWithSingleParameterSelectorFromArgumentActionGroup" stepKey="actionGroup">
            <argument name="someArgument" value="UniquePerson"/>
        </actionGroup>
    </test>

    <test name="ActionGroupWithMultipleParameterSelectorsFromDefaultArgument">
        <annotations>
            <severity value="BLOCKER"/>
            <title value="Action Group With Passed Argument Value and Multiple Argument Values in Param"/>
        </annotations>

        <actionGroup ref="ActionGroupWithMultipleParameterSelectorsFromArgumentActionGroup" stepKey="actionGroup"/>
    </test>

    <test name="ActionGroupWithSimpleDataUsageFromPassedArgument">
        <annotations>
            <severity value="CRITICAL"/>
            <title value="Action Group With Simple Data Usage From Passed Argument"/>
        </annotations>

        <actionGroup ref="ActionGroupWithStringUsageActionGroup" stepKey="actionGroup1">
            <argument name="someArgument" value="overrideString"/>
        </actionGroup>
        <actionGroup ref="ActionGroupWithStringUsageActionGroup" stepKey="actionGroup11">
            <argument name="someArgument" value="1"/>
        </actionGroup>
        <actionGroup ref="ActionGroupWithStringUsageActionGroup" stepKey="actionGroup12">
            <argument name="someArgument" value="1.5"/>
        </actionGroup>
        <actionGroup ref="ActionGroupWithStringUsageActionGroup" stepKey="actionGroup13">
            <argument name="someArgument" value="true"/>
        </actionGroup>
        <actionGroup ref="ActionGroupWithStringUsageActionGroup" stepKey="actionGroup2">
            <argument name="someArgument" value="simpleData.firstname"/>
        </actionGroup>
        <actionGroup ref="ActionGroupWithStringUsageActionGroup" stepKey="actionGroup3">
            <argument name="someArgument" value="$persisted.data$"/>
        </actionGroup>

        <actionGroup ref="ActionGroupWithEntityUsageActionGroup" stepKey="actionGroup4">
            <argument name="someArgument" value="simpleData.firstname"/>
        </actionGroup>
        <actionGroup ref="ActionGroupWithEntityUsageActionGroup" stepKey="actionGroup5">
            <argument name="someArgument" value="$simpleData.firstname$"/>
        </actionGroup>
        <actionGroup ref="ActionGroupWithEntityUsageActionGroup" stepKey="actionGroup6">
            <argument name="someArgument" value="$simpleData.firstname[0]$"/>
        </actionGroup>
        <actionGroup ref="ActionGroupWithEntityUsageActionGroup" stepKey="actionGroup7">
            <argument name="someArgument" value="$simpleData.firstname[data_index]$"/>
        </actionGroup>
    </test>

    <test name="ActionGroupWithSimpleDataUsageFromDefaultArgument">
        <annotations>
            <severity value="CRITICAL"/>
            <title value="Action Group With Simple Data Usage From Default Argument"/>
        </annotations>
        <actionGroup ref="ActionGroupWithStringUsageActionGroup" stepKey="actionGroup"/>
    </test>

    <test name="ActionGroupWithStepKeyReferences">
        <actionGroup ref="FunctionActionGroupWithStepKeyReferencesActionGroup" stepKey="actionGroup"/>
    </test>

    <test name="ActionGroupUsingNestedArgument">
        <actionGroup ref="ActionGroupToExtendActionGroup" stepKey="actionGroup">
            <argument name="count" value="99"/>
        </actionGroup>
    </test>

    <test name="ActionGroupToExtend">
        <actionGroup ref="ActionGroupToExtendActionGroup" stepKey="actionGroup">
            <argument name="count" value="99"/>
        </actionGroup>
    </test>

    <test name="ExtendedActionGroup">
        <actionGroup ref="ExtendTestActionGroup" stepKey="actionGroup">
            <argument name="count" value="99"/>
            <argument name="otherCount" value="8000"/>
        </actionGroup>
    </test>

    <test name="ExtendedRemoveActionGroup">
        <actionGroup ref="ExtendRemoveTestActionGroup" stepKey="actionGroup"/>
    </test>

    <test name="ActionGroupUsingCreateData">
        <before>
            <actionGroup ref="ActionGroupWithCreateDataActionGroup" stepKey="key1"/>
        </before>
    </test>

    <test name="ActionGroupSkipReadiness">
        <actionGroup ref="ActionGroupWithSkipReadinessActionsActionGroup" stepKey="skipReadinessActionGroup"/>
    </test>

    <test name="ActionGroupContainsStepKeyInArgText">
        <before>
            <actionGroup ref="ActionGroupContainsStepKeyInArgValueActionGroup" stepKey="actionGroup">
                <argument name="sameStepKeyAsArg" value="arg1"/>
            </actionGroup>
        </before>
        <actionGroup ref="ActionGroupContainsStepKeyInArgValueActionGroup" stepKey="actionGroup">
            <argument name="sameStepKeyAsArg" value="arg1"/>
        </actionGroup>
    </test>

    <test name="ActionGroupWithSectionAndDataAsArguments">
        <actionGroup ref="ActionGroupWithSectionAndDataActionGroup" stepKey="actionGroup">
            <argument name="content" value="{{simpleData.firstname}}"/>
            <argument name="section" value="SampleSection"/>
        </actionGroup>
    </test>

    <test name="ActionGroupWithParameterizedElementWithHyphen">
        <actionGroup ref="SectionArgumentWithParameterizedSelectorActionGroup" stepKey="actionGroup">
            <argument name="section" value="SampleSection"/>
        </actionGroup>
    </test>

    <test name="ActionGroupWithParameterizedElementsWithStepKeyReferences">
        <actionGroup ref="ActionGroupWithParametrizedSelectorsActionGroup" stepKey="actionGroup">
            <argument name="param" value="simpleData"/>
            <argument name="param2" value="simpleParamData"/>
        </actionGroup>
    </test>
</tests>
